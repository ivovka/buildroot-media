--- a/PLUGINS/src/sc/FFdecsa/Makefile	2013-03-11 01:05:44.000000000 +0400
+++ b/PLUGINS/src/sc/FFdecsa/Makefile	2013-03-11 01:06:37.000000000 +0400
@@ -37,23 +37,12 @@
           parallel_128_sse2.h \
           parallel_128_sse.h
 
-all: FFdecsa.o FFdecsa_test.done
+all: FFdecsa.o
 
 %.o: %.c
 	$(COMPILER) $(FLAGS) -DPARALLEL_MODE=$(PARALLEL_MODE) -c $<
 
-FFdecsa_test:	FFdecsa_test.o FFdecsa.o
-	$(COMPILER) $(FLAGS) -o FFdecsa_test FFdecsa_test.o FFdecsa.o
-
-FFdecsa_test.o: FFdecsa_test.c FFdecsa.h FFdecsa_test_testcases.h
 FFdecsa.o: 	FFdecsa.c stream.c $(H_FILES)
 
-FFdecsa_test.done: FFdecsa_test
-	@./FFdecsa_test
-	@touch FFdecsa_test.done
-
 clean:
-	@rm -f FFdecsa_test FFdecsa_test.done FFdecsa_test.o FFdecsa.o
-
-test:	FFdecsa_test
-	sync;usleep 200000;nice --19 ./FFdecsa_test
+	@rm -f FFdecsa.o
--- a/PLUGINS/src/sc/Makefile	2013-03-11 01:05:44.000000000 +0400
+++ b/PLUGINS/src/sc/Makefile	2013-03-11 01:06:02.000000000 +0400
@@ -41,38 +41,33 @@
 
 ### The directory environment:
 
-VDRDIR = ../../..
-LIBDIR = ../../lib
+# Use package data if installed...otherwise assume we're under the VDR source directory:
+PKGCFG = $(if $(VDRDIR),$(shell $(PKG_CONFIG) --variable=$(1) $(VDRDIR)/vdr.pc),$(shell $(PKG_CONFIG) --variable=$(1) vdr || $(PKG_CONFIG) --variable=$(1) ../../../vdr.pc))
+LIBDIR = $(call PKGCFG,libdir)
+DESTLIBDIR = $(call PKGCFG,destlibdir)
+LOCDIR = $(call PKGCFG,locdir)
+PLGCFG = $(call PKGCFG,plgcfg)
+CFGDIR  = $(call PKGCFG,configdir)/plugins/$(PLUGIN)
+#
+TMPDIR ?= /tmp
 SYSDIR = ./systems
 PREDIR = ./systems-pre
-TMPDIR = /tmp
 
 ### The C++ compiler and options:
 
-CXX      ?= g++
-CXXFLAGS ?= -O2 -g -Wall -Woverloaded-virtual
-
-### Includes and Defines
-
-INCLUDES      = -I$(VDRDIR)/include
-DEFINES       = -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
-SHAREDDEFINES = -DAPIVERSNUM=$(APIVERSNUM) -D_GNU_SOURCE
-LIBS          = -lcrypto
-SHAREDLIBS    =
+export CFLAGS   = $(call PKGCFG,cflags) -O2 -g -Wall
+export CXXFLAGS = $(call PKGCFG,cxxflags) -O2 -g -Wall -Woverloaded-virtual 
+# we need this ATM because of the helper.h macros...
+CXXFLAGS += -fno-strict-aliasing
 
 ### Allow user defined options to overwrite defaults:
 
--include $(VDRDIR)/Make.global
--include $(VDRDIR)/Make.config
--include Make.config
-
-# we need this ATM because of the helper.h macros...
-CXXFLAGS += -fno-strict-aliasing
+-include $(PLGCFG)
 
 ### The version number of VDR (taken from VDR's "config.h"):
 
 VDRVERSION := $(shell sed -ne '/define VDRVERSION/ s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
-APIVERSION := $(shell sed -ne '/define APIVERSION/ s/^.*"\(.*\)".*$$/\1/p' $(VDRDIR)/include/vdr/config.h)
+APIVERSION = $(call PKGCFG,apiversion)
 ifeq ($(strip $(APIVERSION)),)
    APIVERSION = $(VDRVERSION)
 endif
@@ -82,20 +77,28 @@
    APIVERSNUM = $(VDRVERSNUM)
 endif
 
+### The name of the distribution archive:
+
+ARCHIVE = $(PLUGIN)-$(VERSION)
+PACKAGE = vdr-$(ARCHIVE)
+
+### The name of the shared object file:
+
+SOFILE = libvdr-$(PLUGIN).so
+
+### Includes and Defines
+
+DEFINES       = -DPLUGIN_NAME_I18N='"$(PLUGIN)"'
+SHAREDDEFINES = -DAPIVERSNUM=$(APIVERSNUM) -D_GNU_SOURCE
+LIBS          += -lcrypto
+SHAREDLIBS    =
+
 ### The object files (add further files here):
 
 OBJS = $(PLUGIN).o data.o filter.o system.o misc.o cam.o device.o version.o \
        smartcard.o network.o crypto.o system-common.o parse.o log.o \
        override.o
 
-### Internationalization (I18N):
-
-PODIR     = po
-I18Npot   = $(PODIR)/$(PLUGIN).pot
-I18Nmo    = vdr-$(PLUGIN).mo
-I18Nmsgs  = $(addprefix $(LOCALEDIR)/,$(addsuffix /LC_MESSAGES/$(I18Nmo),$(notdir $(foreach file, $(wildcard $(PODIR)/*.po), $(basename $(file))))))
-LOCALEDIR = $(VDRDIR)/locale
-
 ### VDR version dependant
 
 # test VDR version
@@ -124,7 +127,7 @@
 HAVE_SD := $(wildcard ../dvbsddevice/dvbsddevice.c)
 ifneq ($(strip $(HAVE_SD)),)
   DEFINES += -DWITH_SDDVB
-  DEVPLUGTARGETS += $(LIBDIR)/libsc-dvbsddevice-$(SCAPIVERS).so.$(APIVERSION)
+  DEVPLUGTARGETS += libsc-dvbsddevice-$(SCAPIVERS).so
 endif
 DEVPLUGOBJS += device-sd.o
 HAVE_HD := $(wildcard ../dvbhddevice/dvbhddevice.c)
@@ -132,7 +135,7 @@
   HDVERS := $(shell sed -ne '/*VERSION/ s/^.*=.*"\(.*\)".*$$/\1/p' ../dvbhddevice/dvbhddevice.c)
   ifeq ($(findstring dag,$(HDVERS)),)
     DEFINES += -DWITH_HDDVB
-    DEVPLUGTARGETS += $(LIBDIR)/libsc-dvbhddevice-$(SCAPIVERS).so.$(APIVERSION)
+    DEVPLUGTARGETS += libsc-dvbhddevice-$(SCAPIVERS).so
   endif
 endif
 DEVPLUGOBJS += device-hd.o
@@ -149,13 +152,11 @@
 CSAFLAGS   ?= -Wall -fPIC -g -O3 -mmmx -fomit-frame-pointer -fexpensive-optimizations -funroll-loops
 FFDECSADIR  = FFdecsa
 FFDECSA     = $(FFDECSADIR)/FFdecsa.o
-FFDECSATEST = $(FFDECSADIR)/FFdecsa_test.done
 
 # SASC
 ifdef SASC
 DEFINES += -DSASC
 FFDECSA =
-FFDECSATEST =
 endif
 
 # export for system makefiles
@@ -170,70 +171,80 @@
 ### Targets:
 
 ifdef STATIC
-BUILDTARGETS = $(LIBDIR)/libvdr-$(PLUGIN).a
+BUILDTARGETS = libvdr-$(PLUGIN).a
 SHAREDDEFINES += -DSTATICBUILD
 else
-BUILDTARGETS = $(LIBDIR)/libvdr-$(PLUGIN).so.$(APIVERSION) systems-pre $(DEVPLUGTARGETS)
+BUILDTARGETS = libvdr-$(PLUGIN).so systems-pre $(DEVPLUGTARGETS)
 endif
-BUILDTARGETS += $(FFDECSATEST) systems i18n
+BUILDTARGETS += systems i18n
 
 all: $(BUILDTARGETS)
-.PHONY: i18n systems systems-pre contrib clean clean-core clean-systems clean-pre dist srcdist
+
+### Implicit rules:
+
+%.o: %.c
+	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(INCLUDES) -o $@ $<
 
 # Dependencies:
 
-MAKEDEP = g++ -MM -MG
+MAKEDEP = $(CXX) -MM -MG
 DEPFILE = .dependencies
-DEPFILES = $(subst i18n.c,,$(subst version.c,,$(OBJS:%.o=%.c)))
-$(DEPFILE): $(DEPFILES) $(wildcard *.h)
-	@$(MAKEDEP) $(DEFINES) $(SHAREDDEFINES) $(INCLUDES) $(DEPFILES) > $@
+$(DEPFILE): Makefile
+	@$(MAKEDEP) $(CXXFLAGS) $(DEFINES) $(INCLUDES) $(OBJS:%.o=%.c) > $@
 
 -include $(DEPFILE)
 
-# Rules
+### Internationalization (I18N):
 
-%.o: %.c
-	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(SHAREDDEFINES) $(INCLUDES) $<
+PODIR     = po
+I18Npo    = $(wildcard $(PODIR)/*.po)
+I18Npot   = $(PODIR)/$(PLUGIN).pot
+I18Nmo    = $(addsuffix .mo, $(foreach file, $(I18Npo), $(basename $(file))))
+I18Nmsgs  = $(addprefix $(DESTDIR)$(LOCDIR)/, $(addsuffix /LC_MESSAGES/vdr-$(PLUGIN).mo, $(notdir $(foreach file, $(I18Npo), $(basename $(file))))))
 
-libvdr-$(PLUGIN).so: $(OBJS) $(FFDECSA)
-	$(CXX) $(CXXFLAGS) -shared $(OBJS) $(FFDECSA) $(LIBS) $(SHAREDLIBS) -o $@
+%.mo: %.po
+	msgfmt -c -o $@ $<
 
-$(LIBDIR)/libvdr-$(PLUGIN).so.$(APIVERSION): libvdr-$(PLUGIN).so
-	@cp -p $< $@
+$(I18Npot): $(wildcard *.c)
+	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --package-name=vdr-$(PLUGIN) --package-version=$(VERSION) --msgid-bugs-address='<see README>' -o $@ `ls $^`
 
-$(LIBDIR)/libvdr-$(PLUGIN).a: $(OBJS)
-	$(AR) r $@ $(OBJS)
+%.po: $(I18Npot)
+	msgmerge -U --no-wrap --no-location --no-fuzzy-matching --backup=none -q $@ $<
+	@touch $@
 
-libsc-dvbsddevice.so: device-sd.o
-	$(CXX) $(CXXFLAGS) -shared $< $(SHAREDLIBS) -o $@
+$(I18Nmsgs): $(DESTDIR)$(LOCDIR)/%/LC_MESSAGES/vdr-$(PLUGIN).mo: $(PODIR)/%.mo
+	install -D -m644 $< $@
 
-$(LIBDIR)/libsc-dvbsddevice-$(SCAPIVERS).so.$(APIVERSION): libsc-dvbsddevice.so
-	@cp -p $< $@
+i18n: $(I18Nmo) $(I18Npot)
 
-libsc-dvbhddevice.so: device-hd.o
-	$(CXX) $(CXXFLAGS) -shared $< $(SHAREDLIBS) -o $@
+install-i18n: $(I18Nmsgs)
 
-$(LIBDIR)/libsc-dvbhddevice-$(SCAPIVERS).so.$(APIVERSION): libsc-dvbhddevice.so
-	@cp -p $< $@
+# Rules
 
-$(FFDECSA) $(FFDECSATEST): $(FFDECSADIR)/*.c $(FFDECSADIR)/*.h
-	@$(MAKE) COMPILER="$(CXX)" FLAGS="$(CSAFLAGS) -march=$(CPUOPT)" PARALLEL_MODE=$(PARALLEL) -C $(FFDECSADIR) all
+$(SOFILE): $(OBJS) $(FFDECSA)
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $(OBJS) $(FFDECSA) $(LIBS) $(SHAREDLIBS) -o $@
 
-$(I18Npot): $(shell grep -rl '\(tr\|trNOOP\)(\".*\")' *.c $(SYSDIR))
-	xgettext -C -cTRANSLATORS --no-wrap --no-location -k -ktr -ktrNOOP --package-name=VDR-SC --package-version=$(VERSION) --msgid-bugs-address='<noone@nowhere.org>' -o $@ `ls $^`
+install-lib: $(SOFILE)
+	install -D $^ $(DESTDIR)$(DESTLIBDIR)/$^.$(APIVERSION)
+	-install -D libsc-dvbsddevice-$(SCAPIVERS).so $(DESTDIR)$(DESTLIBDIR)/libsc-dvbsddevice-$(SCAPIVERS).so.$(APIVERSION)
+	-install -D libsc-dvbhddevice-$(SCAPIVERS).so $(DESTDIR)$(DESTLIBDIR)/libsc-dvbhddevice-$(SCAPIVERS).so.$(APIVERSION)
 
-%.po: $(I18Npot)
-	msgmerge -U --no-wrap --no-location --no-fuzzy-matching --backup=none -q $@ $<
-	@touch $@
+install: install-lib install-systems install-i18n
 
-%.mo: %.po
-	msgfmt -c -o $@ $<
+libsc-dvbsddevice.so: device-sd.o
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $< $(SHAREDLIBS) -o $@
 
-$(I18Nmsgs): $(LOCALEDIR)/%/LC_MESSAGES/$(I18Nmo): $(PODIR)/%.mo
-	@mkdir -p $(dir $@)
-	cp $< $@
+libsc-dvbsddevice-$(SCAPIVERS).so: libsc-dvbsddevice.so
+	@cp -p $< $@
 
-i18n: $(I18Nmsgs)
+libsc-dvbhddevice.so: device-hd.o
+	$(CXX) $(CXXFLAGS) $(LDFLAGS) -shared $< $(SHAREDLIBS) -o $@
+
+libsc-dvbhddevice-$(SCAPIVERS).so: libsc-dvbhddevice.so
+	@cp -p $< $@
+
+$(FFDECSA): $(FFDECSADIR)/*.c $(FFDECSADIR)/*.h
+	@$(MAKE) COMPILER="$(CXX)" FLAGS="$(CSAFLAGS) -march=$(CPUOPT)" PARALLEL_MODE=$(PARALLEL) -C $(FFDECSADIR) all
 
 version.c: FORCE
 	@echo >$@.new "/* generated file, do not edit */"; \
@@ -243,7 +254,10 @@
 	 rm -f $@.new $@.diff;
 
 systems:
-	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system -C "$(SYSDIR)/$$i" all || exit 1; done
+	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system DESTDIR=$(DESTDIR) DESTLIBDIR=$(DESTLIBDIR) -C "$(SYSDIR)/$$i" all || exit 1; done
+
+install-systems: systems
+	@for i in `ls -A -I ".*" $(SYSDIR)`; do $(MAKE) -f ../../Makefile.system DESTDIR=$(DESTDIR) DESTLIBDIR=$(DESTLIBDIR) -C "$(SYSDIR)/$$i" install || exit 1; done
 
 systems-pre:
 	@for i in `ls -A -I ".*" $(PREDIR) | grep -- '-$(SCAPIVERS).so.$(APIVERSION)$$'`; do cp -p "$(PREDIR)/$$i" "$(LIBDIR)"; done
@@ -293,3 +307,4 @@
 	@echo Full copy package created as vdr-$(ARCHIVE).tar.gz
 
 FORCE:
+.PHONY: i18n systems systems-pre contrib clean clean-core clean-systems clean-pre dist srcdist
--- a/PLUGINS/src/sc/Makefile.system	2013-03-11 01:05:44.000000000 +0400
+++ b/PLUGINS/src/sc/Makefile.system	2013-03-11 01:06:20.000000000 +0400
@@ -30,7 +30,7 @@
 
 # Dependencies:
 
-MAKEDEP = g++ -MM -MG
+MAKEDEP = $(CXX) -MM -MG
 DEPFILE = .dependencies
 $(DEPFILE): $(OBJS:%.o=%.c) $(wildcard *.h)
 	@$(MAKEDEP) $(DEFINES) $(SHAREDDEFINES) $(SINCLUDES) $(OBJS:%.o=%.c) > $@
@@ -44,9 +44,9 @@
 LIBSCAR  = libsc-$(TARGET).a
 
 ifdef STATIC
-BUILDTARGETS = $(LIBDIR)/$(LIBSCAR)
+BUILDTARGETS = $(LIBSCAR)
 else
-BUILDTARGETS = $(LIBDIR)/$(LIBSCVER) $(PREDIR)/$(LIBSCVER)
+BUILDTARGETS = $(LIBSC) $(PREDIR)/$(LIBSCVER)
 endif
 
 define clean
@@ -64,16 +64,13 @@
 %.o: %.c
 	$(CXX) $(CXXFLAGS) -c $(DEFINES) $(SHAREDDEFINES) $(SINCLUDES) $<
 
+install: $(LIBSC)
+	install -D $^ $(DESTDIR)$(DESTLIBDIR)/$(LIBSCVER)
+
 $(LIBSC): $(OBJS)
 	$(CXX) $(CXXFLAGS) -shared $(OBJS) $(LIBS) $(SHAREDLIBS) -o $@
 	$(clean-pre)
 
-$(LIBDIR)/$(LIBSCVER): $(LIBSC)
-	@cp -p $< $@
-
-$(LIBDIR)/$(LIBSCAR): $(OBJS)
-	$(AR) r $@ $(OBJS)
-
 ifdef NONPUBLIC
 $(PREDIR)/$(LIBSCVER): $(LIBSC)
 	$(clean-pre)
